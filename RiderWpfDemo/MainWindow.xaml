<Window x:Class="RiderWpfDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Background="Transparent"
        AllowsTransparency="True"
        Title="MainWindow" MinHeight="720" Height="720" Width="1050" MinWidth="1050" WindowStartupLocation="CenterScreen" WindowStyle="None" >
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="/assets/fonts/#iconfont"></Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                                    CornerRadius="8"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Border Background="Black" CornerRadius="8"  x:Name="Border" Opacity="0.4" Visibility="Hidden">
                                <TextBlock Text="&#xe664;" FontFamily="/assets/fonts/#iconfont" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="24" Foreground="White"></TextBlock>
                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Visibility" Value="Visible"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SmallIconButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Margin" Value="5 0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Opacity="0.8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Opacity" Value="1"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">


                            <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}" Margin="0">
                                <Border x:Name="innerBorder" Background="{StaticResource TabItem.Selected.Background}" BorderThickness="1,1,1,0" BorderBrush="{StaticResource TabItem.Selected.Border}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#5292FE">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>
            <!--#region 头部 -->
            <Grid Grid.Row="0" Background="#5292FE" MouseDown="UIElement_OnMouseDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="350"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--#region 头像区域 -->
                <Grid  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" CornerRadius="30" Width="30" Height="30" HorizontalAlignment="Right" Margin="0 0 10 0">
                        <Border.Background>
                            <ImageBrush>
                                <ImageBrush.ImageSource>
                                    <BitmapImage UriSource="background.png" Rotation="Rotate180"></BitmapImage>
                                </ImageBrush.ImageSource>
                            </ImageBrush>
                        </Border.Background>
                    </Border>
                    <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock Text="张三" Foreground="White"/>
                        <StackPanel Orientation="Horizontal" Margin="0 3 0 0">
                            <Border Background="#F5CE79" CornerRadius="8" Padding="5 2">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="SVIP" FontStyle="Italic" FontSize="10" Foreground="White" VerticalAlignment="Center"/>
                                    <TextBlock Text="年" Margin="3 0 0 0"  FontSize="10" Foreground="White" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                            <Border BorderThickness="1" Opacity="0.5" Margin="5 0 0 0" BorderBrush="White" CornerRadius="8" Padding="5 1">
                                <TextBlock Text="LV.12" FontSize="9"  Foreground="White"/>
                            </Border>
                        </StackPanel>
                    </StackPanel>

                </Grid>
                <!--#endregion-->
                <!--#region 搜索 -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                    <Button Style="{StaticResource SmallIconButton}">
                        <TextBlock Text="&#xe662;" FontSize="20" Foreground="White" ToolTip="返回"></TextBlock>
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}">
                        <TextBlock Text="&#xe64f;" FontSize="18" Foreground="White" ToolTip="刷新"></TextBlock>
                    </Button>

                    <Grid>

                        <Border Width="230" Height="25" Background="White" Opacity="0.4" 
                            Margin="20 0 0 0" CornerRadius="12" />
                        <StackPanel Orientation="Horizontal" Margin="25 0 0 0">
                            <TextBox Width="195" VerticalAlignment="Center" BorderBrush="Transparent"  Foreground="White"
                                     Padding="5 0"  Margin="0" Background="Transparent"/>
                            <Button Style="{StaticResource SmallIconButton}">
                                <TextBlock Text="&#xe6e1;" VerticalAlignment="Center" FontSize="18" ToolTip="搜索" Foreground="White"  ></TextBlock>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <Button Style="{StaticResource SmallIconButton}">
                        <TextBlock Text="&#xe629;" VerticalAlignment="Center" FontSize="18" ToolTip="听歌识曲" Margin="10 0 0 0" Foreground="White"></TextBlock>
                    </Button>

                </StackPanel>
                <!--#endregion-->
                <!--#region 工具区域 -->

                <StackPanel Grid.Column="2" FlowDirection="RightToLeft" Orientation="Horizontal">

                    <Button Style="{StaticResource SmallIconButton}" x:Name="WindowClose" Click="WindowClose_OnClick" ToolTip="关闭" Foreground="White" >
                        <TextBlock Text="&#xe747;" />
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}" x:Name="MaxWindow" Click="MaxWindow_OnClick" ToolTip="最大化" Foreground="White" >
                        <TextBlock Text="&#xe66c;" />
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}" x:Name="MinWindow" Click="MinWindow_OnClick" ToolTip="最小化" Foreground="White" >
                        <TextBlock Text="&#xe7fd;" />
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}" ToolTip="精简模式" Foreground="White" >
                        <TextBlock Text="&#xe757;" />
                    </Button>


                    <TextBlock Text="|" FontSize="18" VerticalAlignment="Center" Foreground="White" Margin="5 0"></TextBlock>
                    <Button Style="{StaticResource SmallIconButton}" ToolTip="主菜单" Foreground="White" >
                        <TextBlock Text="&#xe650;" />
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}" ToolTip="消息中心" Foreground="White" >
                        <TextBlock Text="&#xe7de;" />
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}" ToolTip="个性皮肤" Foreground="White" >
                        <TextBlock Text="&#xe6c6;" />
                    </Button>
                    <Button Style="{StaticResource SmallIconButton}" ToolTip="动态壁纸" Foreground="White" >
                        <TextBlock Text="&#xea24;" />
                    </Button>



                </StackPanel>


                <!--#endregion-->

            </Grid>
            <!--#endregion-->


            <!--#region 中间区域 -->
            <TabControl Grid.Row="1">
                <TabItem Style="{DynamicResource TabItemStyle1}" TabIndex="0">
                    <TabItem.Header >
                        <StackPanel Orientation="Horizontal" Width="180" >
                            <TextBlock Text="&#xe78c;" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Label Content="我的音乐"/>
                        </StackPanel>
                    </TabItem.Header>

                    <TabPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button Height="440" Width="872" Background="Transparent" BorderBrush="Transparent"  >
                            <Path Stroke="Black" StrokeThickness="1"  Fill="#CCCCFF" Height="100"  Stretch="Fill" Width="400">
                                <Path.Data >
                                    <PathGeometry Figures="M710.39682178 790.95627705c-128.17802812 0-175.14877237-141.31204805-216.94972061-265.90671035C451.65149844 400.4527669 418.21458857 313.2781956 352.13612188 313.2781956c-111.85511133 0-159.2256709 256.3517795-159.22567003 358.25963028-0.00427588 21.9823251-17.82275625 39.80080547-39.80508222 39.80080547-21.98553222 0-39.8040126-17.8184795-39.80828848-39.80080547 0-86.77796396 42.59416289-437.8730001 238.83904073-437.8730001 128.17802812 0 175.14877237 141.3109793 216.94544472 265.90670948s75.23678847 211.77137197 141.31525518 211.77137196 111.45850401-123.79823964 119.41738154-167.18561806c4.28892099-21.98553222 25.58600333-36.33396328 47.57153554-32.04611104 21.9823251 4.28785224 36.32968653 25.58493369 32.04183516 47.56725967-2.78587442 9.55492998-48.56145117 231.27783926-199.03075225 231.27783926z m-1e-8 0" />
                                   
                                </Path.Data>
                            </Path>

                        </Button>
                    </TabPanel>


                </TabItem>
                <TabItem TabIndex="1">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" Width="180" Height="30">
                            <TextBlock Text="&#xe72b;" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <Label Content="发现" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </StackPanel>
                    </TabItem.Header>

                </TabItem>
            </TabControl>
            <!--#endregion-->

            <!--#region 底部播放控制 -->
            <Grid Grid.Row="2" Background="White">
                <Grid.RowDefinitions >
                    <RowDefinition Height="2"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Border  Background="LightGray" Height="2"/>
                    <StackPanel  Background="#5292FE" Height="2" Width="120" HorizontalAlignment="Left">
                        <Border Height="8" Width="8 " Background="#5292FE" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 -10" CornerRadius="4"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <!--#region 歌曲信息 -->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                        <Button Height="50" Width="50"  Style="{StaticResource ButtonStyle1}" HorizontalAlignment="Left" Cursor="Hand" 
                                 Margin="20 0 0 0">
                            <Button.Background>
                                <ImageBrush>
                                    <ImageBrush.ImageSource>
                                        <BitmapImage UriSource="background.png"></BitmapImage>
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Button.Background>

                        </Button>

                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Label Content="陈奕迅 - 浮夸" VerticalAlignment="Center"/>
                                <TextBlock Text="&#xe6fa;" VerticalAlignment="Center"></TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Style="{DynamicResource SmallIconButton}" 
                                        ToolTip="我喜欢">
                                    <TextBlock Text="&#xe7df;"/>
                                </Button>
                                <Button Style="{DynamicResource SmallIconButton}"
                                        ToolTip="下载">
                                    <TextBlock Text="&#xe66d;"/>
                                </Button>
                                <Button Style="{DynamicResource SmallIconButton}"
                                        ToolTip="打开歌曲评论">
                                    <TextBlock Text="&#xe7e0;"/>
                                </Button>
                                <Button Style="{DynamicResource SmallIconButton}"
                                        ToolTip="更多">
                                    <TextBlock Text="&#xe679;"/>
                                </Button>

                            </StackPanel>
                        </StackPanel>

                    </StackPanel>
                    <!--#endregion-->
                    <!--#region 控制器 -->
                    <StackPanel Grid.Column="1" HorizontalAlignment="Center" Orientation="Horizontal">
                        <Button Style="{StaticResource SmallIconButton}" FontSize="30"
                                ToolTip="上一首" Foreground="#5192FE">
                            <TextBlock Text="&#xe63c;"/>
                        </Button>
                        <Button Style="{StaticResource SmallIconButton}" FontSize="36" Margin="20 0"
                                Foreground="#5192FE" ToolTip="播放">
                            <TextBlock Text="&#xea82;" />
                        </Button>
                        <Button Style="{StaticResource SmallIconButton}" FontSize="30"
                                ToolTip="下一首" Foreground="#5192FE">
                            <TextBlock Text="&#xe63e;"/>
                        </Button>
                    </StackPanel>
                    <!--#endregion-->
                    <!--#region 控制工具 -->

                    <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="20 0" VerticalAlignment="Center">
                        <TextBlock Text="01:05" Foreground="Gray" VerticalAlignment="Center"/>
                        <TextBlock Text=" / " Foreground="Gray" VerticalAlignment="Center"/>
                        <TextBlock Text="04:17" Foreground="Gray" VerticalAlignment="Center"/>

                        <Button Style="{StaticResource SmallIconButton}">
                            <TextBlock Text="&#xe69f;"></TextBlock>
                        </Button>
                        <Button Style="{StaticResource SmallIconButton}">
                            <TextBlock Text="&#xe6a4;"></TextBlock>
                        </Button>
                        <Button Style="{StaticResource SmallIconButton}">
                            <TextBlock Text="词"></TextBlock>
                        </Button>
                        <Button Style="{StaticResource SmallIconButton}">
                            <TextBlock Text="&#xe61b;"></TextBlock>
                        </Button>

                    </StackPanel>

                    <!--#endregion-->
                </Grid>


            </Grid>
            <!--#endregion-->
        </Grid>
    </Grid>

</Window>
